{
  "name": "gp-controls",
  "version": "0.0.0",
  "description": "A polling interface for the HTML5 Gamepad API",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/gp-controls.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "gkey": "0.0.0"
  },
  "keywords": [
    "gamepad",
    "api",
    "browserify",
    "html5",
    "input",
    "controller"
  ],
  "readme": "# gp-controls\n\nA polling interface for the HTML5 Gamepad API, similar to\n[kb-controls](https://github.com/chrisdickinson/kb-controls).\n\n## Installation ##\n\n`gp-controls` is written for [browserify](http://browserify.org),\nand you can install it using [NPM](http://npmjs.org):\n\n``` bash\nnpm install gp-controls\n```\n\n## Usage ##\n\n### `controller = require('gp-controls')([number,] bindings)` ###\n\nCreates a controller using bindings from\n[gkey](http://github.com/hughsk/gkey)'s generic controller:\n\n* `<axis-left-x>`\n* `<axis-left-y>`\n* `<axis-right-x>`\n* `<axis-right-y>`\n* `<action 1>`\n* `<action 2>`\n* `<action 3>`\n* `<action 4>`\n* `<shoulder-top-left>`\n* `<shoulder-top-right>`\n* `<shoulder-bottom-left>`\n* `<shoulder-bottom-right>`\n* `<meta 1>`\n* `<meta 2>`\n* `<stick-button 1>`\n* `<stick-button 2>`\n* `<up>`\n* `<down>`\n* `<left>`\n* `<right>`\n\nWhere buttons will be values between 0 and 1, and axes will be between -1 and\n1. Optionally, you can pass a number between 0 and 3 to pick a specific\ncontroller by its index.\n\n### `controller.poll()` ###\n\nUpdates the state of the controls. This should be called during your\n`requestAnimationFrame` loop, before you check the controls themselves.\n\n### `controller.enabled` ###\n\nAfter polling, this will be set to `true` if the controller is\nenabled/accessible.\n\n### `controller.inputs` ###\n\nAn object with the values of your controls. In the example below, it will have\nthe properties `move_x`, `move_y` and `fast`.\n\n## Example ##\n\n``` javascript\nvar raf = require('raf')\nvar controller = require('gp-controls')({\n    '<axis-left-x>': 'move_x'\n  , '<axis-left-y>': 'move_y'\n  , '<action 1>': 'fast'\n})\n\nvar canvas = document.createElement('canvas')\n  , ctx = canvas.getContext('2d')\n  , x = (canvas.width = window.innerWidth) / 2\n  , y = (canvas.height = window.innerHeight) / 2\n\nraf(document.body).on('data', function() {\n  controller.poll()\n\n  var speed = controller.inputs.fast ? 4 : 2\n  x += speed * controller.inputs.move_x\n  y += speed * controller.inputs.move_y\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  ctx.fillStyle = '#000'\n  ctx.fillRect(x - 12, y - 12, 24, 24)\n})\n\ndocument.body.appendChild(canvas)\n```\n",
  "bugs": {
    "url": "https://github.com/hughsk/gp-controls/issues"
  },
  "homepage": "https://github.com/hughsk/gp-controls",
  "_id": "gp-controls@0.0.0",
  "_from": "gp-controls@0.0.0"
}
